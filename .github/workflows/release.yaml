name: Release

on:
  # workflow_dispatch:
  # release:
  #   types:
  #     - created
  #     - edited
  #     - published
  push:
    # Pattern matched against refs/tags
    tags:        
      - '*'      

permissions:
    contents: write
    packages: write

jobs:
  releases-matrix:
    name: Release go binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      if: ${{ matrix.os == "ubuntu-latest"}}
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: libczmq-dev libzmq-dev libsodium-dev
        version: 1.0

    - name: Install dependencies
      if: ${{ matrix.os == "ubuntu-macos"}}
      run: |
          brew install libsodium zmq czmq zeromq

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21.5

    - name: Build binaries
      run: |
        export TARP_BIN_NAME=tarp-$(go env GOOS)-$(go env GOARCH)
        make bin/tarp

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.event.release.tag_name }}
        release_name: Release ${{ github.event.release.tag_name }}
        draft: false
        prerelease: false

    - name: Upload binaries
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./tarp_linux_amd64
        asset_name: tarp_linux_amd64
        asset_content_type: application/octet-stream

    # - name: Upload additional binaries
    #   uses: actions/upload-release-asset@v1
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./myapp_darwin_amd64
    #     asset_name: myapp_darwin_amd64
    #     asset_content_type: application/octet-stream
        # Add more upload steps for other platforms

    # Optionally, build and push OCI image
    # - name: Build and push OCI image
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: .
    #     file: ./Dockerfile
    #     platforms: linux/amd64,linux/arm64
    #     push: true
    #     tags: ghcr.io/${{ github.repository_owner }}/tarp:latest
