name: Release

on:
  release:
    types:
      - created
      - edited
      - published
      - unpublished

  push:
    branches:
      - main
  pull_request:

permissions:
    contents: write
    packages: write

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: libczmq-dev libzmq-dev libsodium-dev
        version: 1.0

    - name: Build with xgo
      uses: crazy-max/ghaction-xgo@v1
      with:
        xgo_version: latest
        go_version: 1.21.5
        dest: build
        prefix: tarp
        targets: windows/386,windows/amd64,linux/386,linux/amd64,darwin/386,darwin/amd64
        v: true
        x: false
        ldflags: -s -w
        working_dir: $GITHUB_WORKSPACE/tarp

    # - uses: wangyoucao577/go-release-action@v1
    #   with:
    #     goversion: 1.21.5
    #     build_command: |
    #       make bin/tarp
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     goos: ${{ matrix.goos }}
    #     goarch: ${{ matrix.goarch }}

    # - name: Set up Go
    #   uses: actions/setup-go@v2
    #   with:
    #     go-version: 1.21

    # - name: Build
    #   run: |
    #       make bin/tarp

    # - name: Build binaries
    #   run: GOOS=linux GOARCH=amd64 go build -o tarp_amd64
    #        && GOOS=darwin GOARCH=amd64 go build -o tarp_darwin_amd64
    #        # Add more platforms if needed

    # - name: Create release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   with:
    #     tag_name: ${{ github.event.release.tag_name }}
    #     release_name: Release ${{ github.event.release.tag_name }}
    #     draft: false
    #     prerelease: false

    # - name: Upload binaries
    #   id: upload-release-asset
    #   uses: actions/upload-release-asset@v1
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./myapp_linux_amd64
    #     asset_name: myapp_linux_amd64
    #     asset_content_type: application/octet-stream

    # - name: Upload additional binaries
    #   uses: actions/upload-release-asset@v1
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./myapp_darwin_amd64
    #     asset_name: myapp_darwin_amd64
    #     asset_content_type: application/octet-stream
        # Add more upload steps for other platforms

    # Optionally, build and push OCI image
    # - name: Build and push OCI image
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: .
    #     file: ./Dockerfile
    #     platforms: linux/amd64,linux/arm64
    #     push: true
    #     tags: ghcr.io/${{ github.repository_owner }}/tarp:latest
