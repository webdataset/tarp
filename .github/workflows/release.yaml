name: Release

on:
  release:
    types:
      - created
  push:
    branches:
      - main
  pull_request:

permissions:
    contents: write
    packages: write

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: libczmq-dev libzmq-dev libsodium-dev
        version: 1.0

    - uses: wangyoucao577/go-release-action@v1
      with:
        goversion: 1.21.5
        project_path: ./tarp
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}

    # - name: Set up Go
    #   uses: actions/setup-go@v2
    #   with:
    #     go-version: 1.21

    # - name: Build
    #   run: |
    #       make bin/tarp

    # - name: Build binaries
    #   run: GOOS=linux GOARCH=amd64 go build -o tarp_amd64
    #        && GOOS=darwin GOARCH=amd64 go build -o tarp_darwin_amd64
    #        # Add more platforms if needed

    # - name: Create release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   with:
    #     tag_name: ${{ github.event.release.tag_name }}
    #     release_name: Release ${{ github.event.release.tag_name }}
    #     draft: false
    #     prerelease: false

    # - name: Upload binaries
    #   id: upload-release-asset
    #   uses: actions/upload-release-asset@v1
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./myapp_linux_amd64
    #     asset_name: myapp_linux_amd64
    #     asset_content_type: application/octet-stream

    # - name: Upload additional binaries
    #   uses: actions/upload-release-asset@v1
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./myapp_darwin_amd64
    #     asset_name: myapp_darwin_amd64
    #     asset_content_type: application/octet-stream
        # Add more upload steps for other platforms

    # Optionally, build and push OCI image
    # - name: Build and push OCI image
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: .
    #     file: ./Dockerfile
    #     platforms: linux/amd64,linux/arm64
    #     push: true
    #     tags: ghcr.io/${{ github.repository_owner }}/tarp:latest
